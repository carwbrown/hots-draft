{"version":3,"sources":["App.tsx","index.tsx"],"names":["COMPOSITION_ATTRIBUTES","HERO_ATTRIBUTE","generalWants","CAMP_CLEAR","BURST_DAMAGE","SUSTAINED_DAMAGE","HEALER","TANK","ENGAGE","FOLLOWUP","useStyles","makeStyles","theme","createStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","App","classes","React","useState","heroesMap","setHeroesMap","className","map","want","FormControl","InputLabel","id","Select","labelId","value","onChange","event","target","maps","mapItem","MenuItem","name","selectedMap","find","needs","need","wants","strategy","displayMapInfo","toons","toon","ReactDOM","render","document","getElementById"],"mappings":"ynqCAUKA,EA8BAC,E,yIA9BAD,K,gBAAAA,E,UAAAA,E,4BAAAA,E,4BAAAA,E,wBAAAA,E,8BAAAA,E,gBAAAA,E,oBAAAA,E,kBAAAA,E,gBAAAA,E,gBAAAA,E,sCAAAA,E,sCAAAA,E,sBAAAA,E,8BAAAA,E,YAAAA,E,YAAAA,E,kBAAAA,E,0CAAAA,E,4BAAAA,E,0BAAAA,E,cAAAA,E,oCAAAA,E,kBAAAA,E,YAAAA,E,wBAAAA,E,yBAAAA,M,cA8BAC,K,8BAAAA,E,SAAAA,M,KAKE,IAAMC,EAAyC,CACpDF,EAAuBG,WACvBH,EAAuBI,aACvBJ,EAAuBK,iBACvBL,EAAuBM,OACvBN,EAAuBO,KACvBP,EAAuBQ,OACvBR,EAAuBS,UAWnBC,EAAYC,aAAW,SAACC,GAAD,OAC3BC,YAAa,CACXC,YAAa,CACXC,OAAQH,EAAMI,QAAQ,GACtBC,SAAU,KAEZC,YAAa,CACXC,UAAWP,EAAMI,QAAQ,SAwFhBI,MA3Ef,WACE,IAAMC,EAAUX,IADH,EAEqBY,IAAMC,SAAiB,GAF5C,mBAENC,EAFM,KAEKC,EAFL,KA2Cb,OACE,sBAAKC,UAAU,MAAf,UACE,8CACA,+CACA,6BACGxB,EAAayB,KAAI,SAACC,GACjB,OAAO,6BAAgBA,GAAPA,QAGpB,eAACC,EAAA,EAAD,CAAaH,UAAWL,EAAQP,YAAhC,UACE,cAACgB,EAAA,EAAD,CAAYC,GAAG,2BAAf,iBACA,cAACC,EAAA,EAAD,CACEC,QAAQ,2BACRF,GAAG,qBACHG,MAAOV,EACPW,SAtDa,SAACC,GACpBX,EAAaW,EAAMC,OAAOH,QAiDtB,SAMII,EAAgBX,KAAI,SAACY,GACrB,OACE,cAACC,EAAA,EAAD,CAA2BN,MAAOK,EAAQR,GAA1C,SACGQ,EAAQE,MADIF,EAAQR,YAtDZ,SAACA,GACtB,IAAMW,EAAcJ,EAAKK,MAAK,SAACJ,GAAD,OAAaA,EAAQR,KAAOA,KAC1D,OACE,qCACE,2CACA,oCACGW,QADH,IACGA,OADH,EACGA,EAAaE,MAAMjB,KAAI,SAACkB,GACvB,OAAO,6BAAgBA,GAAPA,QAGpB,2CACA,oCACGH,QADH,IACGA,OADH,EACGA,EAAaI,MAAMnB,KAAI,SAACC,GACvB,OAAO,6BAAgBA,GAAPA,QAGpB,0CACA,qCAAMc,QAAN,IAAMA,OAAN,EAAMA,EAAaK,cA4CpBC,CAAexB,GArChB,qCACE,wCACA,oCACGyB,QADH,IACGA,OADH,EACGA,EAAOtB,KAAI,SAACuB,GACX,OAAO,6BAAmBA,EAAKT,MAAfS,EAAKnB,gBClHjCoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ee583788.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport maps from \"./maps.json\";\nimport toons from \"./heroes.json\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nenum COMPOSITION_ATTRIBUTES {\n  ANCHOR = \"anchor\",\n  AOE = \"aoe\",\n  BOSS_CONTROL = \"boss control\",\n  BURST_DAMAGE = \"burst damage\",\n  CAMP_CLEAR = \"camp clear\",\n  DOUBLE_SOAKER = \"double soaker\",\n  ENGAGE = \"engage\",\n  FOLLOWUP = \"followup\",\n  GANKING = \"ganking\",\n  GLOBAL = \"global\",\n  HEALER = \"healer\",\n  INSANE_CAMP_CLEAR = \"insane camp clear\",\n  INSANE_WAVE_CLEAR = \"insane wave clear\",\n  LATE_GAME = \"late game\",\n  POINT_CONTROL = \"point control\",\n  POKE = \"poke\",\n  RACE = \"race\",\n  ROAMERS = \"roamers\",\n  ROTATION_DISRUPTION = \"rotation disruption\",\n  SAFE_OFFLANE = \"safe offlane\",\n  SIDE_LANERS = \"side laners\",\n  SIEGE = \"siege\",\n  SUSTAINED_DAMAGE = \"sustained damage\",\n  SUSTAIN = \"sustain\",\n  TANK = \"tank\",\n  TEAM_FIGHT = \"team fight\",\n  WAVE_CLEAR = \"wave clear\",\n}\n\nenum HERO_ATTRIBUTE {\n  CROWD_CONTROL = \"crowd control\",\n  OP = \"op\",\n}\n\nexport const generalWants: COMPOSITION_ATTRIBUTES[] = [\n  COMPOSITION_ATTRIBUTES.CAMP_CLEAR,\n  COMPOSITION_ATTRIBUTES.BURST_DAMAGE,\n  COMPOSITION_ATTRIBUTES.SUSTAINED_DAMAGE,\n  COMPOSITION_ATTRIBUTES.HEALER,\n  COMPOSITION_ATTRIBUTES.TANK,\n  COMPOSITION_ATTRIBUTES.ENGAGE,\n  COMPOSITION_ATTRIBUTES.FOLLOWUP,\n];\n\ninterface IMap {\n  name: string;\n  id: number;\n  needs: COMPOSITION_ATTRIBUTES[];\n  wants: COMPOSITION_ATTRIBUTES[];\n  strategy: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  }),\n);\n\n/* TODO:\n  - add tags to heroes\n  - selectable heroes list\n  - searchable heroes list\n  - filterable heroes list\n  - algorithm that looks at selected heroes, selected map and displays what else you need\n*/\n\nfunction App() {\n  const classes = useStyles();\n  const [heroesMap, setHeroesMap] = React.useState<number>(0);\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setHeroesMap(event.target.value as number);\n  };\n\n  const displayMapInfo = (id: number) => {\n    const selectedMap = maps.find((mapItem) => mapItem.id === id);\n    return (\n      <>\n        <h3>Map Needs</h3>\n        <ul>\n          {selectedMap?.needs.map((need) => {\n            return <li key={need}>{need}</li>;\n          })}\n        </ul>\n        <h3>Map Wants</h3>\n        <ul>\n          {selectedMap?.wants.map((want) => {\n            return <li key={want}>{want}</li>;\n          })}\n        </ul>\n        <h3>Strategy</h3>\n        <div>{selectedMap?.strategy}</div>\n      </>\n    );\n  };\n\n  const displayToonInfo = () => {\n    return (\n      <>\n        <h3>Heroes</h3>\n        <ul>\n          {toons?.map((toon) => {\n            return <li key={toon.id}>{toon.name}</li>;\n          })}\n        </ul>\n      </>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>HotS Drafter</h1>\n      <h2>General Needs</h2>\n      <ul>\n        {generalWants.map((want) => {\n          return <li key={want}>{want}</li>;\n        })}\n      </ul>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Map</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={heroesMap}\n          onChange={handleChange}\n        >\n          {(maps as IMap[]).map((mapItem: IMap) => {\n            return (\n              <MenuItem key={mapItem.id} value={mapItem.id}>\n                {mapItem.name}\n              </MenuItem>\n            );\n          })}\n        </Select>\n      </FormControl>\n      {displayMapInfo(heroesMap)}\n      {displayToonInfo()}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}